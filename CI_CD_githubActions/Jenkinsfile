pipeline {
    agent none
    stages {
        stage('Build') {
            agent { label 'aws-agent1' }
            //agent { label 'aws1' }
            //{
                //docker {
                //    image 'python:3.8-alpine3.16'
                // }
               // aws-agent1
           // }
            steps {
                //sh 'python3.8 -m py_compile sources/prog.py sources/calc.py'
                sh 'python3 --version'
                sh 'sudo apt install python3-pip -y'
                sh 'pip3 --version'
                //sh 'cd ./CI_CD_githubActions'
                sh 'ls -la'
                sh 'pip3 install -r CI_CD_githubActions/requirements.txt'
                //stash(name: 'compiled-results', includes: 'sources/*.py*')
            }
        }
        stage('Test') {
            agent { label 'aws-agent1' }
            steps {
                sh 'pytest -v --junit-xml test-reports/results.xml'
            }
            post {
                always {
                    junit "test-reports/results.xml"
                }
            }
        }
    }
}
