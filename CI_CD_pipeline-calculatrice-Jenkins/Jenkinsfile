pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:3.8-alpine3.16'
                }
            }
            steps {
                sh 'python3.8 -m py_compile CI_CD_pipeline-calculatrice-Jenkins/prog.py CI_CD_pipeline-calculatrice-Jenkins/calc.py'
                stash(name: 'compiled-results', includes: 'CI_CD_pipeline-calculatrice-Jenkins/*.py*')
            }
        }
    }

    stage('Test') {
        agent {
            docker {
                image 'grihabor/pytest'
            }
        }
        steps {
            sh 'pyvtest -v --junit-xml test-reports/results.xml sources/test_calc.py'
        }
        post {
            always {
                junit "test-reports/results.xml"
            }
        }
    }
}
